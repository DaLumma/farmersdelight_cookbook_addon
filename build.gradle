    buildscript {
        repositories {
            maven { url = 'https://files.minecraftforge.net/maven' }
            jcenter()
            mavenCentral()
        }
        dependencies {
            classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        }
    }
    apply plugin: 'net.minecraftforge.gradle'
    // Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'

    version = '1.3'
    group = 'net.dalumma.fd_cookbook' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
    archivesBaseName = 'fd_cookbook'

    sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

    println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
    minecraft {
        mappings channel: 'snapshot', version: '20201028-1.16.3'
        runs {
            client {
                workingDirectory project.file('run')

                properties 'mixin.env.disableRefMap': 'true'

                // Recommended logging data for a userdev environment
                property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

                // Recommended logging level for the console
                property 'forge.logging.console.level', 'debug'

                mods {
                    fd_cookbook {
                        source sourceSets.main
                    }
                }
            }

            server {
                workingDirectory project.file('run')

                // Recommended logging data for a userdev environment
                property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

                // Recommended logging level for the console
                property 'forge.logging.console.level', 'debug'

                mods {
                    fd_cookbook {
                        source sourceSets.main
                    }
                }
            }

            data {
                workingDirectory project.file('run')

                // Recommended logging data for a userdev environment
                property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

                // Recommended logging level for the console
                property 'forge.logging.console.level', 'debug'

                // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
                args '--mod', 'fd_cookbook', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

                mods {
                    fd_cookbook {
                        source sourceSets.main
                    }
                }
            }
        }
    }

    // Include resources generated by data generators.
    sourceSets.main.resources { srcDir 'src/generated/resources' }

    dependencies {
        // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
        // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
        // The userdev artifact is a special name and will get all sorts of transformations applied to it.
        minecraft 'net.minecraftforge:forge:1.16.4-35.1.4'

        implementation fg.deobf("curse.maven:fd-398521:3272000")

        implementation fg.deobf("curse.maven:appleskin-248787:3035787")

        runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-50")
        compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16.4-50:api")

        runtimeOnly fg.deobf("mezz.jei:jei-1.16.2:7.3.2.25")
    }

    repositories {
        maven {
            url = 'https://maven.blamejared.com'
        }
        maven {
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven {
            url = "https://www.cursemaven.com"
        }
    }

    // Example for how to get properties into the manifest for reading by the runtime..
    jar {
        manifest {
            attributes([
                "Specification-Title": "fd_cookbook",
                "Specification-Vendor": "fd_cookbooksareus",
                "Specification-Version": "0.1",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"fd_cookbooksareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }
